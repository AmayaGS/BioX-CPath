# Paths
paths:
  input_directory: "C:/Users/Amaya/Documents/PhD/Data/Sjogren_Janssen"
  output_directory: "C:/Users/Amaya/Documents/PhD/Data/Sjogren_Janssen"
  embedding_weights: "C:/Users/Amaya/Documents/PhD/Data/WSI_foundation/"
  path_to_patches: "C:/Users/Amaya/Documents/PhD/Data/Sjogren_Janssen/extracted_patches_1/patches"
  unet_weights: "C:/Users/Amaya/Documents/PhD/Data/UNet_512_1.pth.tar"

# Dataset configurations
dataset:
  name: "Sjogren"  # choices: ['RA', 'Sjogren']
  patch_size: 224
  overlap: 0
  coverage: 0.4
  slide_level: 1
  mask_level: 2
  patch_batch_size: 10
  train_fraction: 0.8
  val_fraction: 0.20
  stain_used: 'all' # RA choices: ['all', 'H&E', 'CD68', 'CD138', 'CD20']

# Parsing configurations
parsing:
  patient_ID: 'img.split("_")[0]' # "Patient123_stain.tiff" -> Patient123
  stain: 'img.split("_")[1]' # "Patient123_stain.tiff" -> stain
  stain_types: {'NA': 0, 'HE': 1, 'CD3': 2, 'CD138': 3, 'CD20': 4, 'CD21': 5} # Sjogren stain types
  stain_colors: {'HE': 'tab:pink', 'CD138': 'tab:orange', 'CD3': 'tab:olive', 'CD20': 'tab:blue', 'CD21': 'tab:cyan'}
  edge_types: {'RAG': 0, 'KNN': 1, 'BOTH': 2}
  edge_colors: {'RAG': 'red', 'KNN': 'dodgerblue', 'BOTH': 'blueviolet'}

# Label/split configurations
labels:
  label: 'label'
  label_dict: {'0': 'Sicca', '1': 'Sjogren'}
  n_classes: 2
  patient_id: 'Patient_ID'

# Graph configurations
graph:
  K: 7
  graph_mode: "krag"
  encoding_size: 20
  positional_encoding: true

GNN:
  num_layers: 4
  convolution: "GAT"
  use_node_embedding: false
  use_edge_embedding: false
  attention_heads: 2
  use_attention: true
  pooling_ratio: 0.5
  dropout: 0.4

training:
  hidden_dim: 512
  learning_rate: 0.0001
  num_epochs: 100
  L2_norm: 0.01
  batch_size: 1
  slide_batch: 1
  num_workers: 0
  scheduler: 1
  checkpoint: true
  seed: 42
  stratified_splits: 5
  weight_type: 'accuracy' # choices: ['accuracy', 'loss', 'auc']

# Visualization configurations
visualization:
  test_fold: 3
  test_ids: null
  specific_ids: false

model:
  name: 'BioXCPath'

# Execution flags
execution:
  preprocess: false
  segmentation: false
  embedding: false
  create_splits: false
  compute_rwpe: false
  train: false
  val: false
  test: false
  visualise: false

# Embedding models configs & paths
embedding_nets:
  # ImageNet pre-trained models
  vgg16:
    size: 4096
    weight_path: ""
    class: "VGG_embedding"
  resnet18:
    size: 512
    weight_path: ""
    class: "ResNet18_embedding"
  resnet50:
    size: 2048
    weight_path: ""
    class: "ResNet50_embedding"
  convnext:
    size: 1024
    weight_path: ""
    class: "ConvNext_embedding"
  ViT:
    size: 768
    weight_path: ""
    class: "ViT_embedding"
  # Foundation Models - Public data
  ssl_resnet18:
    size: 512
    weight_path: "Ciga/tenpercent_resnet18.pt"
    class: "ssl_resnet18_embedding"
  ssl_resnet50:
    size: 2048
    weight_path: ""
    class: "ssl_resnet50_embedding"
  CTransPath:
    size: 768
    weight_path: "CTransPath/ctranspath.pth"
    class: "CTransPath_embedding"
  Lunit:
    size: 384
    weight_path: ""
    class: "Lunit_embedding"
  GigaPath:
    size: 1536
    weight_path: ""
    class: "GigaPath_embedding"
  Phikon:
    size: 1024
    weight_path: ""
    class: "Phikon_embedding"
  # Foundation Models - Private data
  BiOptimus:
    size: 1536
    weight_path: ""
    class: "BiOptimus_embedding"
  UNI:
    size: 1024
    weight_path: ""
    class: "UNI_embedding"

# Mapping of class names to module paths
embedding_classes:
  VGG_embedding: "models.embedding_models.VGG_embedding"
  ResNet18_embedding: "models.embedding_models.ResNet18_embedding"
  ResNet50_embedding: "models.embedding_models.ResNet50_embedding"
  ConvNext_embedding: "models.embedding_models.ConvNext_embedding"
  ViT_embedding: "models.embedding_models.ViT_embedding"
  ssl_resnet18_embedding: "models.embedding_models.ssl_resnet18_embedding"
  ssl_resnet50_embedding: "models.embedding_models.ssl_resnet50_embedding"
  CTransPath_embedding: "models.embedding_models.CTransPath_embedding"
  Lunit_embedding: "models.embedding_models.Lunit_embedding"
  GigaPath_embedding: "models.embedding_models.GigaPath_embedding"
  Phikon_embedding: "models.embedding_models.Phikon_embedding"
  BiOptimus_embedding: "models.embedding_models.BiOptimus_embedding"
  UNI_embedding: "models.embedding_models.UNI_embedding"

